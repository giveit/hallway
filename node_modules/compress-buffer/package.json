{
  "name": "compress-buffer",
  "description": "Synchronous Buffer compression library for Node.js",
  "homepage": "http://egorfine.github.com/node-compress-buffer",
  "bugs": {
    "url": "http://github.com/egorFiNE/node-compress-buffer/issues"
  },
  "version": "1.2.0",
  "author": {
    "name": "Egor Egorov"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/egorfine/node-compress-buffer.git"
  },
  "main": "./index",
  "devDependencies": {
    "nodeunit": ">=0.5.4"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "# node-compress-buffer \n\nSynchronous Buffer compression library for Node.js.\n\n\n## Synopsis\n\n```javascript\ncompress = require('compress-buffer').compress;\nuncompress = require('compress-buffer').uncompress;\n\nvar rawData = fs.readFileSync(\"/etc/passwd\");\n\nvar compressed   = compress(rawData);\nvar uncompressed = uncompress(compressed);\n\nuncompressed == rawData // true!\n```\n\n\n## Why? \n\nFor the sake of the KISS principle. Most of the time you don't need a streaming compression, you need to compress an existing and already complete data. \n\n\n## Options \n\n<code>compress()</code> takes two arguments: the data (must be a <code>Buffer()</code>) and optional compression level which must be within 1..9. It returns compressed <code>Buffer()</code> or <code>undefined</code> on error.\n\n<code>uncompress()</code> takes a single argument: the data (must be a <code>Buffer()</code>) and returns uncompressed <code>Buffer()</code> or <code>undefined</code> on error.\n\nBoth functions could throw exceptions in the following cases:\n\n* zlib initialisation fails;\n* first argument is not a <code>Buffer</code> instance.\n\n\n## Installation\n\n\tnpm install compress-buffer\n\nor\n\n\tnpm install .\n\n\n## License\n\nSee LICENSE file. Basically, it's a kind of \"do-whatever-you-want-for-free\" license.\n\n\n## Thanks to \n\n* A lot of thanks for important suggestions goes to Konstantin KÃ¤fer who implemented a nice similar module node-zlib (https://github.com/kkaefer/node-zlib) earlier than me;\n* Oleg Kertanov, pccowboy, addisonj, David Swift\n\n## Author\n\nEgor Egorov <me@egorfine.com>.\n\n",
  "readmeFilename": "README.md",
  "_id": "compress-buffer@1.2.0",
  "dist": {
    "shasum": "3a352e3221b19036500f91e8ac461de8f5c732cc"
  },
  "_from": "compress-buffer@1.2.x",
  "_resolved": "https://registry.npmjs.org/compress-buffer/-/compress-buffer-1.2.0.tgz"
}
